name: quarkus

on:
  workflow_call:
    inputs:
      jdk:
        description: 'JDK version'
        default: '17'
        required: false
        type: string    
      native:
        description: 'Quarkus native build true/false'
        default: false
        required: false
        type: string
      push:
        description: 'Push docker image'
        default: false
        required: false
        type: boolean
      tags:
        description: 'Additional docker image tags'
        default: '{{ .Branch }}'
        required: false
        type: string         
jobs:
  maven:
    name: quarkus build and test
    runs-on: ubuntu-latest
    env:
      QUARKUS_CONTAINER_IMAGE_REGISTRY: 'ghcr.io'
      QUARKUS_CONTAINER_IMAGE_GROUP: ${{ github.repository_owner }}
      QUARKUS_CONTAINER_IMAGE_BUILD: 'true'
      QUARKUS_CONTAINER_IMAGE_PUSH: ${{ inputs.push }}
      SAMO_DOCKER_TAG_TEMPLATE_LIST: ${{ inputs.tags }}
    steps:
    # install samo tool
    - uses: lorislab/install-samo-action@v2
    # checkout the project
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # set up java and maven cache
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ inputs.jdk }}
        cache: 'maven'
    # login to github docker registry in the organization
    - uses: docker/login-action@v2
      with:
        registry: ${{ env.QUARKUS_CONTAINER_IMAGE_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # set build env variables
    - name: Create build env variables
      run: |
        echo "QUARKUS_CONTAINER_IMAGE_ADDITIONAL_TAGS=$(samo project docker tags)" >> $GITHUB_ENV
        echo "QUARKUS_APPLICATION_VERSION=$(samo project version)" >> $GITHUB_ENV
        samo project docker labels >> src/main/resources/application.properties
        cat src/main/resources/application.properties
    # build JVM version
    - name: Build jvm project, run tests and push docker image
      if: ${{ inputs.native != 'true' }}
      run: mvn -ntp -B -e clean impsort:check formatter:validate verify --file pom.xml
    # build NATIVE version  
    - name: Build native project, run tests and push docker image
      if: ${{ inputs.native == 'true' }}
      run: mvn -ntp -B -e -Pnative clean impsort:check formatter:validate verify --file pom.xml
    # store github action pr number to file  
    - name: Create sonar json file
      if: github.event_name == 'pull_request'
      run: echo ${{ github.event.number }} > github-action-pr.txt      
    # upload github action pr number
    - uses: actions/upload-artifact@v3
      if: github.event_name == 'pull_request'
      with:
        name: github-action-pr
        path: github-action-pr.txt      
    # upload target for next jobs      
    - uses: actions/upload-artifact@v3
      with:
        name: package
        path: target
        retention-days: 1
        if-no-files-found: ignore
