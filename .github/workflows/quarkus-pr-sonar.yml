name: sonar

on:
  workflow_call:
    inputs:
      jdk:
        description: 'JDK version'
        default: '17'
        required: false
        type: string 
      artifact:
        description: 'Name of the artifact for the build'
        default: 'package'
        required: false
        type: string   
      artifactPath:
        description: 'Artifact path'
        default: 'target'
        required: false
        type: string

jobs:
  sonar:
    name: scan
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0    
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "${{ inputs.artifact }}"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/${{ inputs.artifact }}.zip', Buffer.from(download.data));
      - run: |
          mkdir ${{ inputs.artifactPath }}
          unzip ${{ inputs.artifact }}.zip -d ${{ inputs.artifactPath }}
      # set up java and maven cache
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.jdk }}
          cache: 'maven'
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Sonar publish analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
          SONAR_URL: 'https://sonarcloud.io'      
        run: |
          REPO=$GITHUB_REPOSITORY
          SONAR_KEY="${GITHUB_REPOSITORY//\//_}"
          OPS="-Dsonar.projectKey=$SONAR_KEY"
          OPS="$OPS -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-report/jacoco.xml"
          OPS="$OPS -Dsonar.organization=${{ github.repository_owner }}"
          OPS="$OPS -Dsonar.host.url=$SONAR_URL"
          OPS="$OPS -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}"
          OPS="$OPS -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.label }}"
          OPS="$OPS -Dsonar.pullrequest.base=${{ github.head_ref }}"
          echo $OPS
          mvn -ntp -B -e org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar $OPS -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        